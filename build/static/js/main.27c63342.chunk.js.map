{"version":3,"sources":["api/index.js","components/App.js","components/Account.js","components/List.js","components/Post.js","components/Nav.js","components/NewPost.js","components/Profile.js","components/Message.js","components/Inbox.js","components/ViewUserPosts.js","index.js"],"names":["API_URL","BASE_URL","callApi","a","url","method","token","body","console","log","options","toUpperCase","headers","JSON","stringify","fetch","response","json","data","error","alert","message","fetchUserData","fetchPosts","posts","App","useState","setToken","userData","setUserData","setPosts","loading","setLoading","useEffect","localStorage","getItem","username","exact","path","className","src","action","Account","setUsername","password","setPassword","isLogin","title","oppositeTitle","oppositeAction","history","useHistory","handleSubmit","event","preventDefault","user","setItem","push","onSubmit","type","required","onChange","target","value","to","List","searchTerm","updateSearchTerm","postsDisplay","length","filter","post","searchTermLowercase","toLowerCase","description","location","author","includes","postMatches","CircularProgress","placeholder","map","onClick","_id","Post","postId","useParams","find","userId","handleDelete","success","postAuthor","price","willDeliver","Nav","clear","NewPost","setTitle","setDescription","setPrice","setLocation","setWillDeliver","handleOnSubmit","rows","cols","maxLength","Profile","Message","content","setContent","handleSumbit","Inbox","messages","myInbox","sentMessages","fromUser","receivedMessages","index","ViewUserPosts","myPosts","activePost","active","createdAt","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.27c63342.chunk.js","sourcesContent":["export const BASE_URL = 'https://strangers-things.herokuapp.com/api/';\nexport const COHORT_NAME = '2010-USD-RM-WEB-PT';\nexport const API_URL = BASE_URL + COHORT_NAME;\n\nexport const callApi = async ({ url, method, token, body }) => {\n    console.log(\"callApi: \", { url, method, token, body });\n    try {\n        const options = {\n            method: method ? method.toUpperCase() : 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        };\n        if (token) {\n            options.headers['Authorization'] = `Bearer ${token}`;\n        }\n        console.log('request url: ', API_URL + url);\n        const response = await fetch(API_URL + url, options);\n        const data = await response.json();\n        console.log('data: ', data);\n        // console.log('callApi: ', { url, method, token, body });\n        if (data.error) throw data.error;\n        return data;\n\n    } catch (error) {\n        alert( `Error: ${error.message}`);\n    }\n};","import React, { useState, useEffect } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport {\n  Account,\n  List,\n  Post,\n  Nav,\n  NewPost,\n  Profile,\n  Message,\n  Inbox,\n  ViewUserPosts,\n} from \"./\";\nimport { callApi } from \"../api\";\n\nconst fetchUserData = async (token) => {\n  const { data } = await callApi({\n    url: \"/users/me\",\n    token,\n  });\n  return data;\n};\n\nconst fetchPosts = async () => {\n  const {\n    data: { posts },\n  } = await callApi({\n    url: \"/posts\",\n  });\n  return posts;\n};\n\nconst App = () => {\n  const [token, setToken] = useState(\"\");\n  const [userData, setUserData] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading]= useState(false)\n//   console.log(\"token\", token);\n\n  useEffect(async () => {\n    setLoading(true);\n\n    const posts = await fetchPosts();\n    if (posts){ \n      setLoading(false);\n\n      setPosts(posts);\n    }\n    if (!token) {\n      setToken(localStorage.getItem(\"token\"));\n      setLoading(false);\n\n      return;\n    }\n    const data = await fetchUserData(token);\n\n    if (data && data.username) {\n            setLoading(false);\n\n      setUserData(data);\n    }}, [token]);\n\n\n  return (\n    <>\n      <Nav userData={userData} setUserData={setUserData} setToken={setToken} />\n\n      <Route exact path=\"/\">\n          <div className=\"title-page\">\n            <div className='left-side'>\n            <img className='home-img' src='https://images.unsplash.com/photo-1472851294608-062f824d29cc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=100'/>\n            </div>\n            <div className='right-side'>\n            <h2>Where Stranger Is Better</h2>\n        \n              </div>\n          </div>\n       \n      </Route>\n      <Route path=\"/login\">\n        <Account action=\"login\" setToken={setToken} setUserData={setUserData} />\n      </Route>\n      <Route path=\"/register\">\n        <Account\n          action=\"register\"\n          setToken={setToken}\n          setUserData={setUserData}\n        />\n      </Route>\n      <Route exact path=\"/posts\">\n        <List posts={posts} \n        loading= {loading}\n        />\n      </Route>\n      <Route path=\"/posts/:postId\">\n        <Post\n          posts={posts}\n          setPosts={setPosts}\n          token={token}\n          userData={userData}\n        />\n      </Route>\n      <Route path=\"/posts/:postId/messages\">\n        <Message token={token}></Message>\n      </Route>\n      <Route path=\"/dashboard\">\n        <Profile \n        userData={userData} \n        posts={posts} \n        token={token} /> \n      </Route>\n      <Route path=\"/dashboard/messages\">\n     <Inbox \n        userData={userData} \n        posts={posts} /> \n      </Route>\n      <Route path=\"/newPost\">\n        <NewPost \n        posts={posts} \n        setPosts={setPosts} \n        token={token} />\n      </Route>\n      <Route exact path=\"/dashboard/myposts\">\n        <ViewUserPosts \n        userData={userData} />\n      </Route>\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { callApi } from '../api'\n\n\nconst Account = ({ action, setToken, setUserData }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const isLogin= action === 'login';\n    const title = isLogin ? 'Login' : 'Create Account';\n    const oppositeTitle = isLogin ? 'Create Account' : 'Login';\n    const oppositeAction = isLogin ? 'register' : 'login';\n    const history= useHistory ();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = await callApi({\n            url: `/users/${action}`,\n            body: { user: { username, password } },\n            method: 'POST',\n        });\n        const token = data?.data?.token;\n\n        if (token) {\n            localStorage.setItem('token', token);\n            setUsername('');\n            setPassword('');\n            setToken(token);\n            history.push('/dashboard');\n        }\n    };\n\n    return (\n        <div className= 'account-form'>\n        <h1> {title} </h1>\n            <form onSubmit= {handleSubmit}>\n                <label>Username:</label>\n                <input \n                type='text' \n                required\n                onChange = {(event) => \n                    setUsername(event.target.value)\n                }></input>\n                <label>Password:</label>\n                <input \n                type='password' \n                required\n                onChange = {(event) => \n                    setPassword(event.target.value)\n                }></input>\n                  <label>Re-enter Password:</label>\n                <input type='password' required\n                onChange = {(event) => \n                    setPassword(event.target.value)\n                 } ></input>\n                <button type='submit'> {title} </button> \n                </form>\n\n            <Link to= {`/${oppositeAction}`}> {oppositeTitle} </Link>\n        </div>\n    );\n }\nexport default Account;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nconst postMatches = (post, searchTerm) =>{\n    const searchTermLowercase= searchTerm.toLowerCase();\n    const{ \n        description, \n        location, \n        title, \n        author: { username }\n    } = post;\n\n    const toMatch = [description, location, title, username];\n    for (const field of toMatch){\n        if (field.toLowerCase().includes(searchTermLowercase)){\n            return true;\n        }\n    }\n}\n\nconst List = ({ posts, loading }) => {\n    const history = useHistory();\n    const [searchTerm, updateSearchTerm] = useState ('')\n\n    const postsDisplay = searchTerm.length > 0 ?\n    posts.filter((post) => postMatches(post, searchTerm)) : posts;\n\n    if (loading){\n        return <CircularProgress className='loading-icon'/> ;\n\n    }\n\n    return (\n        <>\n            \n            <h2>Posts</h2>\n            <div className= 'search-bar'>\n            <input\n            className= 'search-input'\n            type = 'text'\n            placeholder= 'Search for posts'\n            value= {searchTerm}\n            onChange= {(event)=> {\n                updateSearchTerm(event.target.value);\n            }} \n            />\n             <button>SEARCH</button>\n            </div>\n            <div className='post-list'>\n            { postsDisplay.length > 0 && postsDisplay ? (\n                postsDisplay.map(( post ) => (\n                    <div key= {post._id} className= 'post'>\n                <h5>{post.title}</h5>\n                <div>Posted by: {post.author.username}</div>\n                <div>Description: {post.description} </div>\n                <button\n                    onClick={() => {\n                    history.push(`/posts/${post._id}`);\n                    }}>View Post</button>\n                    </div>\n                    ))\n                ) : (\n                    <h5>NO posts to display</h5>\n            )}\n            </div>\n        </>\n    );\n};\n\nexport default List;\n\n","import React from 'react';\nimport { callApi } from '../api';\nimport { useHistory, useParams } from 'react-router-dom';\n\n\n\n\nconst Post = ({posts, setPosts, token, userData}) => {\n\nconst history= useHistory()\nconst {postId} = useParams();\nconst post = posts.find((post) => postId === post._id);\nconst userId= userData._id\n\nconsole.log('post:', post)\n\n\nconst handleDelete = async ()=>{\n    const {success} = await callApi ({\n        url: `/posts/${post._id}`,\n        token: token,\n        method:'DELETE'\n    });\n    if(success){\n        alert('Post Deleted!')\n        history.push('/dashboard')\n        setPosts([...posts])\n\n    }\n\n}\n\n  if (!post){\n      return <div></div>\n  } \n  const postAuthor = post.author._id;\n\n  return (\n\n        <div className='single-post'>\n             <h5> {post.title} </h5>\n             <div> Posted by: { post.author.username }</div>\n             <div> Location: { post.location }</div>\n             <div> Description: { post.description }</div>\n             <div>Price : ${post.price}</div>\n             <div>Delivers: { post.willDeliver ? 'Yes' : 'No' }</div>\n             {userId === postAuthor && postAuthor? (\n             <button onClick= {handleDelete}>Delete</button>)\n             : null\n             }\n             {userId !== postAuthor ? (\n            <button\n            onClick= {() =>{\n            history.push(`/posts/${postId}/messages`)\n            }} > Reply</button>) : null\n            }\n        </div>\n    )\n\n\n}\n\nexport default Post","import React, {useState} from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\n\n\n\n\n\nconst Nav = ({userData, setUserData, setToken}) =>{\n    const history = useHistory();\n\n    const logOut = () => {\n        localStorage.clear();\n        setUserData({});\n        setToken('');\n        history.push(\"/\");\n    \n};\n\n\nreturn (\n    <header>\n    <nav>\n    <img src=\"/logo.png\"></img>\n    <div className='nav-links'>\n    <Link to ='/'>Home</Link>\n    <Link to='/posts'>Posts</Link>\n    <Link to='/dashboard'>Profile</Link>\n    {userData._id ? (\n        <Link to=\"/\" onClick={() => logOut()}>\n              Logout\n        </Link>\n          ) : (\n        <Link to='/login'>\n              Login\n        </Link>\n    )}\n    </div>\n    </nav>\n    </header>\n)\n}\n\nexport default Nav;","import React, {useState} from 'react';\nimport { callApi } from '../api';\nimport { useHistory } from 'react-router-dom';\n\n\n\nconst NewPost = ({posts, setPosts, token}) =>{\n    const [title, setTitle] = useState('');\n    const [description, setDescription]= useState('')\n    const [price, setPrice] = useState ('');\n    const [location, setLocation] = useState ('On Request');\n    const [willDeliver, setWillDeliver] = useState (false);\n    const history= useHistory ();\n\n\n    const handleOnSubmit = async (event) => {\n        event.preventDefault();\n\n        const { data, success, error } = await callApi({\n            url: `/posts`,\n            method: 'POST',\n            token: token,\n            body: { post:  \n          {  title,\n            description,\n            price,\n            location,\n            willDeliver}\n                },\n        })\n        if(data && success && data.post)\n        {setPosts([ ...posts, data.post])}\n        console.log(posts)\n        console.log(data)\n\n        history.push(`/posts/`);\n \n\n    }\n\n    return (\n    \n        <form className='add-post' onSubmit = {handleOnSubmit}>       \n        <h2>Create New Post:</h2> \n        <input type= 'text' placeholder= 'title' \n        value = {title}\n        onChange= {(event)=>{\n            setTitle(event.target.value)\n        }}\n        required></input>\n        <textarea placeholder= 'Description' rows=\"2\" cols=\"15\" maxLength=\"50\" required\n        value= {description}\n        onChange= {(event)=> {\n            setDescription(event.target.value)\n        }}\n        ></textarea>\n        <input type='number' placeholder= 'Price' required\n        value= {price}\n        onChange= {(event)=> {\n            setPrice(event.target.value)\n        }}\n        ></input>\n        <input type= 'text' placeholder= 'Location'\n        value={location} \n        onChange= {(event)=> {\n            setLocation(event.target.value)\n        }}\n        ></input>\n        <select\n        value= {true}\n        onChange= {(event)=> {\n         setWillDeliver(event.target.value)\n        }}\n        >\n        <option >Able to Deliver?</option>\n        <option value='yes'>Yes</option>\n        <option value='no'>No</option>\n        </select>\n        <button>Add Post</button>\n        </form>\n    \n    )\n\n}\n\nexport default NewPost;","import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst Profile = ({ userData }) => {\n  const history = useHistory();\n\n  if (!userData._id) {\n    return (\n      <div className=\"sign-in-message\">\n        <h1>Need to Log in</h1>\n        <Link to=\"/login\">Log in here</Link>\n      </div>\n    );\n  }\n  return (\n    <>\n      <div className=\"dashboard-messages\">\n        {userData.username && <h1>Hello, {userData.username}!</h1>}\n      </div>\n      <aside>\n        <button\n          onClick={() => {\n            history.push(\"/newPost\");\n          }}\n        >\n          Create New Listing\n        </button>\n        <button\n          onClick={() => {\n            history.push(\"/dashboard/messages\");\n          }}\n        >\n          Inbox\n        </button>\n        <button\n          onClick={() => {\n            history.push(\"/dashboard/myposts\");\n          }}\n        >\n          View my Post\n        </button>\n      </aside>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { callApi } from '../api';\n\n\n\nconst Message= ({token}) =>{\n    const {postId} = useParams();\n    const [content, setContent] = useState ('');\n    const history= useHistory();\n\nconsole.log('postid', postId)\nconsole.log('token is',token)\n\nconst handleSumbit= async(event) =>{\n    event.preventDefault();\n\n    const data = await callApi ({\n        url: `/posts/${postId}/messages`,\n        method:'POST',\n        token: token,\n        body: { message: {content}}\n    })\n    console.log('data:',data)\n\n    const messageSuccess = data?.success;\n    if (messageSuccess){\n        alert('Message Sent!')\n        history.push('/dashboard/')\n    } \n\n    console.log(data)\n\n}\n    return(   \n        <div className='message-form'>\n         <h1>Reply to Post</h1>\n         <form onSubmit={handleSumbit}>\n         <textarea className='message-form-textarea' placeholder= 'type a message' rows=\"10\" cols=\"40\" maxLength=\"150\" required\n         value={content}\n         onChange= {(event)=>{\n             setContent(event.target.value)\n         }}\n        ></textarea>\n        <button>Send</button>\n        <button onClick= {()=>{\n            history.push(`/posts/${postId}`)\n        }} >Cancel</button>\n        </form>\n         </div>\n    )    \n}\n\nexport default Message","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Inbox = ({ userData, posts }) => {\n  const history = useHistory();\n\n\n  console.log(\"userData\", userData);\n\n\n  if ( !userData.messages || !posts) {\n   return  <div></div>;\n  }\n  const userId = userData._id;\n  const myInbox = userData.messages ;\n  const sentMessages = myInbox.filter((message) => {\n    return userId === message.fromUser._id;\n  });\n  const receivedMessages = myInbox.filter((message) => {\n    return userId !== message.fromUser._id;\n  });\n   console.log(\"messages\", myInbox);\n    console.log(\"sent\", sentMessages);\n  \n    console.log(\"received\", receivedMessages);\n  return (\n    <div className=\"messages-display\">\n      <h2>Messages Received:</h2>\n\n      {receivedMessages ? (\n        receivedMessages.map((message, index) => {\n          return (\n            <div key={index} className=\"messages-received\">\n              <h3>From: {message.fromUser.username}</h3>\n              <h3>Message: {message.content}</h3>\n              <h3>Orginial Post: {message.post.title} </h3>\n              <button\n                onClick={() => {\n                  history.push(`/posts/${message.post._id}`);\n                }}\n              >\n                View Original Post\n              </button>\n            </div>\n          );\n        })\n      ) : (\n        <h3>No Messages Received</h3>\n      )}\n      <h2>Messages Sent:</h2>\n\n      {sentMessages ? (\n        sentMessages.map((message, index) => {\n          return (\n            <div key={index} className=\"messages-sent\">\n              <h3>From: {message.fromUser.username}</h3>\n              <h3>Message: {message.content}</h3>\n              <h3>Orginial Post: {message.post.title} </h3>\n              <button\n                onClick={() => {\n                  history.push(`/posts/${message.post._id}`);\n                }}\n              >\n                View Original Post\n              </button>\n            </div>\n          );\n        })\n      ) : (\n        <h3>No Messages Sent</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Inbox;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ViewUserPosts = ({ userData }) => {\n  const myPosts = userData.posts;\n  const history = useHistory();\n\n  console.log(\"userData\", userData);\n\n\n  if (!myPosts) {\n    return <h5>NO posts to display</h5>;\n  }\n  const activePost = myPosts.filter((post) => post.active === true);\n  return (\n    <div className=\"users-posts\">\n      {activePost.map((post, index) => {\n        return (\n          <div key={index}>\n            <h5>{post.title}</h5>\n            <div>Created at: {post.createdAt}</div>\n            <div>Description: {post.description} </div>\n            <button\n              onClick={() => {\n                history.push(`/posts/${post._id}`);\n              }}\n            >\n              View Post\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ViewUserPosts;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { App } from './components';\n\nReactDOM.render(\n    <Router>\n        <App />\n        </Router>,\n    document.querySelector('#app'),\n);"],"sourceRoot":""}