{"ast":null,"code":"var _jsxFileName = \"/Users/karlarodriguez/Desktop/course_work/strangers_thing_react/src/components/NewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { callApi } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPost = ({\n  posts,\n  setPosts\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [location, setLocation] = useState('[on request]');\n  const [deliver, setDeliver] = useState(false);\n  const [token, setToken] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleOnSubmit = async event => {\n    var _data$data;\n\n    event.preventDefault();\n    const data = await callApi({\n      url: `/posts`,\n      body: {\n        user: {\n          username,\n          password\n        }\n      },\n      method: 'POST'\n    });\n    const token = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.token;\n    setToken(token); // setPosts([data, ...posts])\n\n    console.log('newpost:', data);\n  }; // const handleOnSubmit = async (event) => {\n  //     event.preventDefault();\n  //     const data = await callApi({\n  //         url: `/posts`,\n  //         body: { posts: { \n  //             posts:\n  //           [  {title,\n  //             description,\n  //             price,\n  //             location,\n  //             deliver}]\n  //             }},\n  //         method: 'POST',\n  //     })\n  //     if (token) {\n  //         localStorage.setItem('token', token);\n  //         setToken(token);\n  //         history.push('/posts');\n  //         console.log('token',token)\n  //     }\n  //     // setPosts([data, ...posts])\n  //     console.log('newpost:', data)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleOnSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      value: title,\n      onChange: event => {\n        setTitle(event.target.value);\n      },\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      rows: \"2\",\n      cols: \"15\",\n      maxLength: \"50\",\n      required: true,\n      value: description,\n      onChange: event => {\n        setDescription(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Price\",\n      required: true,\n      value: price,\n      onChange: event => {\n        setPrice(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      value: location,\n      onChange: event => {\n        setLocation(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPost, \"UrpzigWyMA1LBQFk8wMnknAEOSQ=\");\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/Users/karlarodriguez/Desktop/course_work/strangers_thing_react/src/components/NewPost.js"],"names":["React","useState","callApi","NewPost","posts","setPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","deliver","setDeliver","token","setToken","username","setUsername","password","setPassword","handleOnSubmit","event","preventDefault","data","url","body","user","method","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { callApi } from '../api';\n\n\nconst NewPost = ({posts, setPosts}) =>{\n    const [title, setTitle] = useState('');\n    const [description, setDescription]= useState('')\n    const [price, setPrice] = useState ('');\n    const [location, setLocation] = useState ('[on request]');\n    const [deliver, setDeliver] = useState (false);\n    const [token, setToken] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n        \n\n\n    const handleOnSubmit = async (event) => {\n        event.preventDefault();\n\n            const data = await callApi({\n            url: `/posts`,\n            body: { user: { username, password } },\n            method: 'POST',\n        })\n        const token = data?.data?.token;\n\n        setToken(token);\n\n            // setPosts([data, ...posts])\n            console.log('newpost:', data)\n        \n\n    }\n    // const handleOnSubmit = async (event) => {\n    //     event.preventDefault();\n\n    //     const data = await callApi({\n    //         url: `/posts`,\n    //         body: { posts: { \n    //             posts:\n    //           [  {title,\n    //             description,\n    //             price,\n    //             location,\n    //             deliver}]\n    //             }},\n    //         method: 'POST',\n    //     })\n\n\n    //     if (token) {\n    //         localStorage.setItem('token', token);\n    //         setToken(token);\n    //         history.push('/posts');\n    //         console.log('token',token)\n    //     }\n    //     // setPosts([data, ...posts])\n \n    //     console.log('newpost:', data)\n\n    // }\n\n    return (\n    \n        <form onSubmit = {handleOnSubmit}>        \n        <input type= 'text' placeholder= 'title' \n        value = {title}\n        onChange= {(event)=>{\n            setTitle(event.target.value)\n        }}\n        required></input>\n        <textarea placeholder= 'Description' rows=\"2\" cols=\"15\" maxLength=\"50\" required\n        value= {description}\n        onChange= {(event)=> {\n            setDescription(event.target.value)\n        }}\n        ></textarea>\n        <input type='number' placeholder= 'Price' required\n        value= {price}\n        onChange= {(event)=> {\n            setPrice(event.target.value)\n        }}\n        ></input>\n        <input type= 'text' placeholder= 'Location' \n        value= {location}\n        onChange= {(event)=> {\n            setLocation(event.target.value)\n        }}\n        ></input>\n        {/* <select\n        value= {deliver}\n        onChange= {(event)=> {\n            setDeliver(event.target.value)\n        }}\n        >\n        <option value=\"\" disabled selected>Able to Deliver?</option>\n        <option value=\"Yes\">Yes</option>\n        <option value=\"No\">No</option>\n        </select> */}\n        <button>Add Post</button>\n        </form>\n    \n    )\n\n}\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}