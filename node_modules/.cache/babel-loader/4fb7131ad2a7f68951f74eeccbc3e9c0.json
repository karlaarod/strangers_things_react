{"ast":null,"code":"var _jsxFileName = \"/Users/karlarodriguez/Desktop/course_work/strangers_thing_react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Account, List, Post, Nav, NewPost } from './';\nimport { callApi } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchUserData = async token => {\n  const {\n    data\n  } = await callApi({\n    url: '/users/me',\n    token\n  });\n  return data;\n};\n\nconst fetchPosts = async () => {\n  const {\n    data: {\n      posts\n    }\n  } = await callApi({\n    url: '/posts'\n  });\n  return posts;\n};\n\nconst App = () => {\n  _s();\n\n  const [token, setToken] = useState('');\n  const [userData, setUserData] = useState({});\n  const [posts, setPosts] = useState([]);\n  console.log(`Token is: ${token}`);\n  useEffect(async () => {\n    if (!token) {\n      setToken(localStorage.getItem('token'));\n      const posts = await fetchPosts();\n      setPosts(posts);\n      return;\n    }\n\n    const data = await fetchUserData(token);\n\n    if (data && data.username) {\n      setUserData(data);\n    }\n\n    const posts = await fetchPosts();\n    setPosts(posts);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: [userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Hello, \", userData.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(NewPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/posts\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/posts/:postId\",\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      children: /*#__PURE__*/_jsxDEV(Account, {\n        action: \"login\",\n        setToken: setToken,\n        setUserData: setUserData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      children: /*#__PURE__*/_jsxDEV(Account, {\n        action: \"register\",\n        setToken: setToken,\n        setUserData: setUserData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"qeNv1Tndzz5pdIk7DzwqDOL76IU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karlarodriguez/Desktop/course_work/strangers_thing_react/src/components/App.js"],"names":["React","useState","useEffect","Route","Account","List","Post","Nav","NewPost","callApi","fetchUserData","token","data","url","fetchPosts","posts","App","setToken","userData","setUserData","setPosts","console","log","localStorage","getItem","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Account, List, Post, Nav, NewPost} from './';\nimport { callApi } from '../api';\n\n\nconst fetchUserData = async (token) => {\n    const { data } = await callApi({\n        url: '/users/me',\n        token,\n    });\n    return data;\n};\n\nconst fetchPosts = async () =>{\n    const { data: { posts } } = await callApi ({\n        url: '/posts',\n    });\n    return posts;\n}\n\n\n\nconst App = () => {\n    const [token, setToken] = useState('');\n    const [userData, setUserData]= useState({})\n    const [posts, setPosts] = useState ([])\n    console.log(`Token is: ${token}`);\n\n    useEffect(async () => {\n        if (!token) {\n            setToken(localStorage.getItem('token'));\n            const posts= await fetchPosts();\n            setPosts(posts)\n            return;\n        }\n        const data = await fetchUserData(token);\n        if (data && data.username) {\n            setUserData(data);\n        } const posts= await fetchPosts();\n        setPosts(posts);\n    },[token]);\n\n    return (\n        <>\n         {/* <h2 className='tagline'>Where Stranger is Better!</h2> */}\n        <Nav/>\n         <Route exact path=\"/\">\n                {userData.username && <div>Hello, {userData.username}!</div>}\n                <NewPost/>\n            </Route>\n            <Route exact path=\"/posts\">\n                <List posts = { posts }/>\n            </Route>\n            <Route path=\"/posts/:postId\">\n                <Post posts={posts} />\n            </Route>\n        <Route path= '/login'>\n        <Account action= 'login' setToken={setToken} setUserData= {setUserData}/>\n        </Route>\n        <Route path ='/register'>\n        <Account action= 'register' setToken={setToken} setUserData= {setUserData} />\n        </Route>\n        </>\n    );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}