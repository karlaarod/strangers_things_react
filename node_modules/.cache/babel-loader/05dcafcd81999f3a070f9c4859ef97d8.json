{"ast":null,"code":"var _jsxFileName = \"/Users/karlarodriguez/Desktop/course_work/strangers_thing_react/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { Link, useHistory } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_ROOT = 'https://strangers-things.herokuapp.com/api/2010-USD-RM-WEB-PT/users';\nconst API_REGISTER = `${API_ROOT}/register`;\nconst API_LOGIN = `${API_ROOT}/login`;\nconst API_USER = `${API_ROOT}/me`;\n\nconst Account = ({\n  action,\n  setToken,\n  setUserData\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const isLogin = action === 'login';\n  const title = isLogin ? 'Login' : 'Register';\n  const oppositeTitle = isLogin ? 'Register' : 'Login';\n  const oppositeAction = isLogin ? 'register' : 'login';\n  const actionURL = isLogin ? API_LOGIN : API_REGISTER;\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(actionURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    }).catch(error => {\n      console.error(error);\n    });\n    const {\n      data\n    } = await response.json().catch(error => {\n      console.error(error);\n    });\n    const token = data.token;\n\n    if (token) {\n      setToken(token);\n      const userResponse = await fetch(API_USER, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      }).catch(error => console.error('Error getting user data', error));\n      const {\n        data\n      } = await userResponse.json().catch(error => console.error('Error parsing json', error));\n      console.log('User data is: ', data);\n      setUserData(data);\n      history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        required: true,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/${oppositeAction}`,\n      children: oppositeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Account, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", true);\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/karlarodriguez/Desktop/course_work/strangers_thing_react/src/components/Account.js"],"names":["React","useState","API_ROOT","API_REGISTER","API_LOGIN","API_USER","Account","action","setToken","setUserData","username","setUsername","password","setPassword","isLogin","title","oppositeTitle","oppositeAction","actionURL","history","useHistory","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","user","catch","error","console","data","json","token","userResponse","Authorization","log","push","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;;AAEA,MAAMC,QAAQ,GACV,qEADJ;AAEA,MAAMC,YAAY,GAAI,GAAED,QAAS,WAAjC;AACA,MAAME,SAAS,GAAI,GAAEF,QAAS,QAA9B;AACA,MAAMG,QAAQ,GAAI,GAAEH,QAAS,KAA7B;;AAEA,MAAMI,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAuC;AAAA;;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMa,OAAO,GAAGP,MAAM,KAAK,OAA3B;AACA,QAAMQ,KAAK,GAAGD,OAAO,GAAG,OAAH,GAAa,UAAlC;AACA,QAAME,aAAa,GAAGF,OAAO,GAAG,UAAH,GAAgB,OAA7C;AACA,QAAMG,cAAc,GAAGH,OAAO,GAAG,UAAH,GAAgB,OAA9C;AACA,QAAMI,SAAS,GAAGJ,OAAO,GAAGV,SAAH,GAAeD,YAAxC;AACA,QAAMgB,OAAO,GAAGC,UAAU,EAA1B;;AAEA,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,SAAD,EAAY;AACpCQ,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAE;AACFrB,UAAAA,QAAQ,EAAEA,QADR;AAEFE,UAAAA,QAAQ,EAAEA;AAFR;AADW,OAAf;AAL8B,KAAZ,CAAL,CAWpBoB,KAXoB,CAWbC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAbsB,CAAvB;AAcA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMX,QAAQ,CAACY,IAAT,GAAgBJ,KAAhB,CAAuBC,KAAD,IAAW;AACpDC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAFsB,CAAvB;AAGA,UAAMI,KAAK,GAAGF,IAAI,CAACE,KAAnB;;AACA,QAAIA,KAAJ,EAAW;AACP7B,MAAAA,QAAQ,CAAC6B,KAAD,CAAR;AAEA,YAAMC,YAAY,GAAG,MAAMb,KAAK,CAACpB,QAAD,EAAW;AACvCsB,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAELY,UAAAA,aAAa,EAAG,UAASF,KAAM;AAF1B;AAD8B,OAAX,CAAL,CAKxBL,KALwB,CAKjBC,KAAD,IACLC,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC,CANuB,CAA3B;AAQA,YAAM;AAAEE,QAAAA;AAAF,UAAW,MAAMG,YAAY,CAC9BF,IADkB,GAElBJ,KAFkB,CAEXC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC,CAFC,CAAvB;AAGAC,MAAAA,OAAO,CAACM,GAAR,CAAY,gBAAZ,EAA8BL,IAA9B;AACA1B,MAAAA,WAAW,CAAC0B,IAAD,CAAX;AAEAhB,MAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACH;AACJ,GAvCD;;AAwCA,sBACI;AAAA,4BACI;AAAA,gBAAK1B;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,QAAQ,EAAGC,KAAD,IAAWX,WAAW,CAACW,KAAK,CAACoB,MAAN,CAAaC,KAAd;AAJpC;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,QAAQ,EAAGrB,KAAD,IAAWT,WAAW,CAACS,KAAK,CAACoB,MAAN,CAAaC,KAAd;AAHpC;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAuB5B;AAAvB;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,IAAGE,cAAe,EAA7B;AAAA,gBAAiCD;AAAjC;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAoBH,CAtED;;GAAMV,O;;KAAAA,O;AAwEN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\n// import { Link, useHistory } from 'react-router-dom';\n\nconst API_ROOT =\n    'https://strangers-things.herokuapp.com/api/2010-USD-RM-WEB-PT/users';\nconst API_REGISTER = `${API_ROOT}/register`;\nconst API_LOGIN = `${API_ROOT}/login`;\nconst API_USER = `${API_ROOT}/me`;\n\nconst Account = ({ action, setToken, setUserData }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const isLogin = action === 'login';\n    const title = isLogin ? 'Login' : 'Register';\n    const oppositeTitle = isLogin ? 'Register' : 'Login';\n    const oppositeAction = isLogin ? 'register' : 'login';\n    const actionURL = isLogin ? API_LOGIN : API_REGISTER;\n    const history = useHistory();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const response = await fetch(actionURL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password,\n                },\n            }),\n        }).catch((error) => {\n            console.error(error);\n        });\n        const { data } = await response.json().catch((error) => {\n            console.error(error);\n        });\n        const token = data.token;\n        if (token) {\n            setToken(token);\n\n            const userResponse = await fetch(API_USER, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n            }).catch((error) =>\n                console.error('Error getting user data', error),\n            );\n            const { data } = await userResponse\n                .json()\n                .catch((error) => console.error('Error parsing json', error));\n            console.log('User data is: ', data);\n            setUserData(data);\n\n            history.push('/');\n        }\n    };\n    return (\n        <>\n            <h2>{title}</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"username\"\n                    required\n                    onChange={(event) => setUsername(event.target.value)}\n                ></input>\n                <input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    onChange={(event) => setPassword(event.target.value)}\n                ></input>\n                <button type=\"submit\">{title}</button>\n            </form>\n            <Link to={`/${oppositeAction}`}>{oppositeTitle}</Link>\n        </>\n    );\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}